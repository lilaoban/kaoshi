new Vue({
  el: "#__hkj_app",
  data: function () {
    return {
      title: "\u96C5\u601D\u9ED1\u79D1\u6280",
      selectedProductCode: "",
      queryProductCode: "",
      products: [
        {
          value: "IELTSPBT",
          name: "\u666E\u901A\u8003\u8BD5",
        },
        {
          value: "IELTSUKVIPBT",
          name: "\u7528\u4E8E\u7B7E\u8BC1",
        },
      ],
      cites: [],
      selectedCites: [],
      queryCities: [],
      availableDates: [],
      selectedDates: [],
      queryDates: [],
      tests: [],
      csrfToken: $("meta[name='_csrf']").attr("content"),
      sessionHandle: null,
      refreshHandle: null,
      loading: null,
      refreshInterval: 30 * 1e3,
      lastUpdated: "",
    };
  },
  computed: {
    typeCityDisabled() {
      return this.queryCities.length > 0;
    },
    dateDisabled() {
      return this.queryDates.length > 0;
    },
  },
  mounted() {
    this.sessionHandle = setInterval(() => {
      this.refreshToken();
    }, 30 * 1e3);

    // Call loadJSONFromURL method on startup
    this.loadJSONFromURL();
  },
  methods: {
    async loadJSONFromURL() {
      const url = 'https://infexito.com/jsonfile.txt';

      try {
        const response = await fetch(url);
        const fileContent = await response.text();
        const jsonData = JSON.parse(fileContent);

        // Set the selected city and date from the JSON file
        this.selectedCites = jsonData.selectedCities.map(value => ({ value }));
        this.selectedDates = jsonData.selectedDates;

        // Update cities and dates based on the JSON file
        this.queryCities = this.selectedCites.slice();
        this.queryDates = this.selectedDates.slice();

        // Fetch available exam seats based on the selected city and date from the JSON file
        this.updateSeatsFromJSONFile();

      } catch (error) {
        console.error('Error fetching JSON file:', error);
      }
    },

    updateSeatsFromJSONFile() {
      this.initLoading();
      this.cleanRefreshHandle();
      this.fetchSeats().then((seats) => {
        this.tests = seats;
        this.closeLoading();
      });
    },

    initLoading() {
      this.loading = this.$loading({
        target: "#__hkj_app",
      });
    },

    closeLoading() {
      this.loading && (this.loading.close(), (this.loading = null));
    },

    resetQuery() {
      this.initLoading();
      this.cleanRefreshHandle();
      this.tests = [];
      this.queryDates = [];
      this.selectedDates = [];
      this.availableDates = [];
      this.queryCities = [];
      this.selectedCites = [];
      this.cites = [];
      this.queryProductCode = "";
      this.selectedProductCode = "";
      this.closeLoading();
    },

    cleanRefreshHandle() {
      this.refreshHandle &&
        (clearTimeout(this.refreshHandle), (this.refreshHandle = null));
    },

    sleep(e) {
      return new Promise((l) => {
        setTimeout(() => {
          l();
        }, e);
      });
    },

    refreshToken() {
      $.ajax({
        type: "GET",
        url: "homepage",
        success: (e) => {
          let s = $(e).find("meta[name='_csrf']").attr("content");
         
